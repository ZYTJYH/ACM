#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<queue>
#include<stdlib.h>
#include<cstdio>
#include<string.h>
#include<math.h>
#include<fstream>
#include<map>
using namespace std;
int n;
int a[1000+10];
int visit[1000+10];
int sum=0;
int f;
bool dfs(int num,int len,int targetLength){
    if(num==sum/targetLength)
    {
        f=1;
        return false;
    }
    for(int i=0;i<n;i++)
    {
        if(f==0) {

            if (!visit[i] && len + a[i] < targetLength) {
                visit[i] = 1;
                if(dfs(num, len + a[i], targetLength))
                {
                    if(len==0)
                        break;
                }
                visit[i] = 0;
            } else if (!visit[i] && len + a[i] == targetLength) {
                visit[i] = 1;
                dfs(num + 1, 0, targetLength);
                visit[i] = 0;
            }else{
                if(visit[0]==0)
                    break;
            }
            while(a[i]==a[i+1])
                break;
        }else{
            break;
        }
    }
    return false;
}

bool cmp(int a,int b)
{
    return a>b;
}
int main(){
    while(cin>>n,n)
    {
        memset(visit,0, sizeof(visit));
        sum=0;
        for(int i=0;i<n;i++)
        {
            cin>>a[i];
            sum+=a[i];
        }
        sort(a,a+n,cmp);
        for(int i=a[0];i<=sum;i++)
        {
            f=0;
            if(sum%i==0) {
                dfs(0, 0, i);
                if(f==1)
                {
                    cout<<i<<endl;
                    break;
                }
            }
        }
    }
    return 0;
}
